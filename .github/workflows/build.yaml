# (C) Copyright 2025, SECO Mind Srl
#
# SPDX-License-Identifier: Apache-2.0

name: Check build for the library

on:
  pull_request:
  push:
defaults:
  run:
    shell: bash
env:
  GRPC_VERSION: "1.69.0"

jobs:
  build-simple-sample-fetch-grpc:
    runs-on: ubuntu-latest
    concurrency:
      group: build-simple-sample-fetch-grpc-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
      - name: Build library for C++ 20
        run: ./build_sample.sh simple
  build-simple-sample-install-grpc:
    runs-on: ubuntu-latest
    concurrency:
      group: build-simple-sample-install-grpc-${{ github.ref }}
      cancel-in-progress: true
    steps:
      - uses: actions/checkout@v4
        with:
          path: astarte-device-sdk-cpp
      - name: Setup gRPC build cache
        id: cache-grpc-cpp
        uses: actions/cache@v4
        with:
          path: |
            ./grpc
            ./grpc-install
          # Cache the hash of the build script for the CMAKE flags
          key: grpc-cpp-v${{ env.GRPC_VERSION }}-${{ hashFiles('astarte-device-sdk-cpp/.github/scripts/build-grpc.sh') }}
      - name: Setup gRPC for build
        run: |
          ./astarte-device-sdk-cpp/.github/scripts/setup-grpc.sh "$GRPC_VERSION"
      - name: Compile gRPC from source
        run: |
          ./astarte-device-sdk-cpp/.github/scripts/build-grpc.sh
      - name: Build example for C++ 20
        working-directory: ./astarte-device-sdk-cpp
        run: ./build_sample.sh simple --fresh --system_grpc --stdcpp 20
      - name: Build example for C++ 17
        working-directory: ./astarte-device-sdk-cpp
        run: ./build_sample.sh simple --fresh --system_grpc --stdcpp 17
  build-qt-sample:
    runs-on: ubuntu-latest
    needs: build-simple-sample-install-grpc
    strategy:
      matrix:
        qt_version: [5.15.2, 6.5.3]
    steps:
      - uses: actions/checkout@v4
      - name: Setup gRPC build cache
        id: cache-grpc-cpp
        uses: actions/cache@v4
        with:
          path: |
            ./grpc
            ./grpc-install
          # Cache the hash of the build script for the CMAKE flags
          key: grpc-cpp-v${{ env.GRPC_VERSION }}-${{ hashFiles('.github/scripts/build-grpc.sh') }}
      - name: Setup already built gRPC
        run: |
          ./.github/scripts/setup-grpc.sh "$GRPC_VERSION"
      - name: Install Qt
        uses: jurplel/install-qt-action@v4
        with:
          version: ${{ matrix.qt_version }}
          target: desktop
          arch: gcc_64
          cache: true
          cache-key-prefix: install-qt-action
      - name: Detect Qt path
        id: qt-path
        run: |
          if [[ "${{ matrix.qt_version }}" == 5* ]]; then
            echo "QT_PATH=$Qt/5.15.2/gcc_64/lib/cmake/Qt5" >> $GITHUB_ENV
            echo "QT_MAJOR_VERSION=5" >> $GITHUB_ENV
          else
            echo "QT_PATH=$Qt/6.5.3/gcc_64/lib/cmake/Qt6" >> $GITHUB_ENV
            echo "QT_MAJOR_VERSION=6" >> $GITHUB_ENV
          fi
      - name: Build Qt example
        run: |
          ./build_sample.sh qt --qt_version "$QT_MAJOR_VERSION" --qt_path "$QT_PATH" --fresh --system_grpc
